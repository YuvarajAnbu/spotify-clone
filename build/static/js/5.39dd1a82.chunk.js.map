{"version":3,"sources":["component/Upload/subComponent/One/index.js","component/Upload/subComponent/Two/subComponents/Player/index.js","component/Upload/subComponent/Two/index.js","component/Upload/subComponent/SmallComponents/CustomSelect/index.js","component/Upload/subComponent/Three/index.js","component/Upload/subComponent/Four/index.js","component/Upload/subComponent/Five/index.js","component/Upload/subComponent/Six/index.js","component/Upload/subComponent/Seven/index.js","component/Upload/index.js"],"names":["One","next","useContext","FormContext","form","setForm","className","type","onClick","prev","message","error","xmlns","width","height","viewBox","d","Player","song","count","isPlaying","setIsPlaying","currentAudio","setCurrentAudio","useSelector","state","songs","volume","muted","dispatch","useDispatch","useState","URL","createObjectURL","blob","Audio","audio","isLoaded","setIsLoaded","duration","setDuration","currentTime","setCurrentTime","sliderValue","setSliderValue","isSliderChanging","setIsSliderChanging","useEffect","addEventListener","e","removeEventListener","target","play","pause","title","role","fill","style","value","max","onChange","onMouseUp","setTimeout","onTouchEnd","unMute","mute","setVolume","onWheel","deltaY","Number","min","Two","playbar","beats","setSongs","setCount","hidePopOver","setHidePopover","showPopup","setShowPop","currentPopup","setCurrentPopup","useForm","register","errors","formState","handleSubmit","reset","pauseSong","arr","components","map","i","master","length","el","document","querySelector","scrollTop","scrollHeight","slice","loading","draggable","src","image","alt","onError","insertAdjacentHTML","display","filter","k","fillRule","lyrics","name","version","id","xmlnsXlink","x","y","xmlSpace","placement","visible","onVisibleChange","content","trigger","onSubmit","data","a","Object","keys","forEach","includes","index","findIndex","htmlFor","required","validate","valid","doesImageExist","url","Promise","resolve","img","Image","onload","onerror","doesAudioExist","onloadeddata","doesLrcExist","FileReader","readAsText","result","filteredCount","shift","goBack","OnSubmit","CustomSelect","values","setValue","open","setisOpen","tabIndex","onBlur","focusable","points","stroke","shouldValidate","Three","defaultValues","producerName","genre","bpm","key","desc","watch","getValues","disabled","toUpperCase","Four","isrcCode","artist","releaseTitle","producer","publisher","buyLink","iswcCode","releaseDate","recordLabel","Five","ccl","rsa","la","others","abbrivations","items","setItems","licenses","obj","localCount","push","file","multiple","accept","Array","from","files","j","DeleteOutlined","p","totalLength","Six","Seven","console","log","success","createContext","Upload","changeActiveComponent","current","setCurrent","Provider"],"mappings":"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","file":"static/js/5.39dd1a82.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { FormContext } from '../..';\r\nimport { message } from 'antd';\r\n\r\nimport './index.css';\r\n\r\nfunction One({ next }) {\r\n  const { form, setForm } = useContext(FormContext);\r\n\r\n  return (\r\n    <div className=\"one\">\r\n      <div className=\"one__container\">\r\n        <h1>Lets Create</h1>\r\n        <p>\r\n          Lets get started with IINDI's Smart AI. Select from the options below\r\n          to best catogrise your uploads\r\n        </p>\r\n        <div className=\"one__container__btns\">\r\n          <button\r\n            type=\"button\"\r\n            className={form.type === 'vocals' ? 'active' : ''}\r\n            onClick={() => {\r\n              setForm((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  type: 'vocals',\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Vocal stems\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={form.type === 'beats' ? 'active' : ''}\r\n            onClick={() => {\r\n              setForm((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  type: 'beats',\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Beat stems\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={form.type === 'full tracks' ? 'active' : ''}\r\n            onClick={() => {\r\n              setForm((prev) => {\r\n                return {\r\n                  ...prev,\r\n                  type: 'full tracks',\r\n                };\r\n              });\r\n            }}\r\n          >\r\n            Full track stems\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            if (form.type) {\r\n              next();\r\n            } else {\r\n              message.error('Please provide upload type');\r\n            }\r\n          }}\r\n        >\r\n          Next to \" Upload \"\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default One;\r\n","import { message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  mute,\r\n  setVolume,\r\n  unMute,\r\n} from '../../../../../../redux/songs/songsSlice';\r\n\r\nfunction Player({\r\n  song,\r\n  count,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  currentAudio,\r\n  setCurrentAudio,\r\n}) {\r\n  const { volume, muted } = useSelector((state) => state.songs);\r\n  const dispatch = useDispatch();\r\n\r\n  const [blob] = useState(URL.createObjectURL(song));\r\n  const [audio] = useState(new Audio(blob));\r\n\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [sliderValue, setSliderValue] = useState(0);\r\n  const [isSliderChanging, setIsSliderChanging] = useState(false);\r\n\r\n  // check audio error\r\n  useEffect(() => {\r\n    audio.addEventListener('error', (e) => {\r\n      message.error('Loading song Failed. Try reloading the page');\r\n    });\r\n    return () => {\r\n      audio.removeEventListener('error', (e) => {\r\n        message.error('Loading song Failed. Try reloading the page');\r\n      });\r\n    };\r\n  }, [audio]);\r\n\r\n  //check audio loaded\r\n  useEffect(() => {\r\n    audio.addEventListener('loadeddata', (e) => {\r\n      setIsLoaded(true);\r\n      setDuration(audio.duration);\r\n    });\r\n    return () => {\r\n      audio.removeEventListener('loadeddata', (e) => {\r\n        setIsLoaded(true);\r\n        setDuration(audio.duration);\r\n      });\r\n    };\r\n  }, [audio]);\r\n\r\n  // get currentDuration\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      audio.addEventListener('timeupdate', (e) => {\r\n        setCurrentTime(e.target.currentTime);\r\n      });\r\n      return () => {\r\n        audio.removeEventListener('timeupdate', (e) => {\r\n          setCurrentTime(e.target.currentTime);\r\n        });\r\n      };\r\n    }\r\n  }, [isLoaded, audio]);\r\n\r\n  //on ended\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      audio.addEventListener('ended', (e) => {\r\n        setCurrentTime(0);\r\n        setSliderValue(0);\r\n        setIsPlaying(false);\r\n      });\r\n      return () => {\r\n        audio.removeEventListener('ended', (e) => {\r\n          setCurrentTime(0);\r\n          setSliderValue(0);\r\n          setIsPlaying(false);\r\n        });\r\n      };\r\n    }\r\n  }, [isLoaded, audio, setIsPlaying]);\r\n\r\n  //play and pause when isPlaying changes\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      if (isPlaying && currentAudio === count) {\r\n        audio.play();\r\n      } else {\r\n        audio.pause();\r\n      }\r\n    }\r\n  }, [isPlaying, isLoaded, audio, count, currentAudio]);\r\n\r\n  // changing slider value\r\n  useEffect(() => {\r\n    if (!isSliderChanging) {\r\n      setSliderValue(currentTime);\r\n    }\r\n  }, [currentTime, isSliderChanging]);\r\n\r\n  //mute\r\n  useEffect(() => {\r\n    if (audio) {\r\n      audio.muted = muted;\r\n    }\r\n  }, [audio, muted]);\r\n\r\n  //change volume\r\n  useEffect(() => {\r\n    if (audio) {\r\n      audio.volume = volume;\r\n    }\r\n  }, [audio, volume]);\r\n\r\n  return (\r\n    <div className=\"upload__songs__song__playbar\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"play\"\r\n        title={isPlaying && currentAudio === count ? 'Pause' : 'Play'}\r\n        onClick={() => {\r\n          if (currentAudio !== count) {\r\n            setCurrentAudio(count);\r\n            setIsPlaying(true);\r\n          } else {\r\n            if (isPlaying && currentAudio === count) {\r\n              setIsPlaying(false);\r\n            } else {\r\n              setIsPlaying(true);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {isPlaying && currentAudio === count ? (\r\n          <svg role=\"img\" height=\"12\" width=\"12\" viewBox=\"0 0 16 16\">\r\n            <path className=\"a\" fill=\"none\" d=\"M0 0h16v16H0z\"></path>\r\n            <path\r\n              className=\"b\"\r\n              fill=\"#ffffff\"\r\n              d=\"M3 2h3v12H3zm7 0h3v12h-3z\"\r\n            ></path>\r\n          </svg>\r\n        ) : (\r\n          <svg role=\"img\" height=\"16\" width=\"16\" viewBox=\"0 0 16 16\">\r\n            <path className=\"b\" d=\"M4.018 14L14.41 8 4.018 2z\"></path>\r\n          </svg>\r\n        )}\r\n      </button>\r\n      <div className=\"upload__songs__song__playbar__song\">\r\n        <input\r\n          className=\"progressBar\"\r\n          title=\"\"\r\n          style={{\r\n            '--seek-before-width': `${(sliderValue / duration) * 100}%`,\r\n          }}\r\n          type=\"range\"\r\n          value={sliderValue}\r\n          max={duration}\r\n          onChange={(e) => {\r\n            setIsSliderChanging(true);\r\n            setSliderValue(e.target.value);\r\n          }}\r\n          onMouseUp={(e) => {\r\n            setSliderValue(e.target.value);\r\n            setCurrentTime(e.target.value);\r\n            audio.currentTime = e.target.value;\r\n            setTimeout(() => {\r\n              setIsSliderChanging(false);\r\n            }, 1000);\r\n          }}\r\n          onTouchEnd={(e) => {\r\n            setSliderValue(e.target.value);\r\n            setCurrentTime(e.target.value);\r\n            audio.currentTime = e.target.value;\r\n            setTimeout(() => {\r\n              setIsSliderChanging(false);\r\n            }, 1000);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"upload__songs__song__playbar__sound\">\r\n        <button\r\n          title={muted ? 'Unmute' : 'Mute'}\r\n          onClick={() => {\r\n            if (muted) {\r\n              dispatch(unMute());\r\n            } else {\r\n              dispatch(mute());\r\n            }\r\n          }}\r\n        >\r\n          <svg role=\"presentation\" height=\"16\" width=\"16\" viewBox=\"0 0 16 16\">\r\n            {muted ? (\r\n              <path d=\"M0 5v6h2.804L8 14V2L2.804 5H0zm7-1.268v8.536L3.072 10H1V6h2.072L7 3.732zm8.623 2.121l-.707-.707-2.147 2.147-2.146-2.147-.707.707L12.062 8l-2.146 2.146.707.707 2.146-2.147 2.147 2.147.707-.707L13.477 8l2.146-2.147z\"></path>\r\n            ) : volume === 0 ? (\r\n              <path d=\"M0 5v6h2.804L8 14V2L2.804 5H0zm7-1.268v8.536L3.072 10H1V6h2.072L7 3.732zm8.623 2.121l-.707-.707-2.147 2.147-2.146-2.147-.707.707L12.062 8l-2.146 2.146.707.707 2.146-2.147 2.147 2.147.707-.707L13.477 8l2.146-2.147z\"></path>\r\n            ) : volume > 0 && volume <= 0.3 ? (\r\n              <path d=\"M10.04 5.984l.658-.77q.548.548.858 1.278.31.73.31 1.54 0 .54-.144 1.055-.143.516-.4.957-.259.44-.624.805l-.658-.77q.825-.865.825-2.047 0-1.183-.825-2.048zM0 11.032v-6h2.802l5.198-3v12l-5.198-3H0zm7 1.27v-8.54l-3.929 2.27H1v4h2.071L7 12.302z\"></path>\r\n            ) : volume > 0.3 && volume <= 0.6 ? (\r\n              <path d=\"M0 11.032v-6h2.802l5.198-3v12l-5.198-3H0zm7 1.27v-8.54l-3.929 2.27H1v4h2.071L7 12.302zm4.464-2.314q.401-.925.401-1.956 0-1.032-.4-1.957-.402-.924-1.124-1.623L11 3.69q.873.834 1.369 1.957.496 1.123.496 2.385 0 1.262-.496 2.385-.496 1.123-1.369 1.956l-.659-.762q.722-.698 1.123-1.623z\"></path>\r\n            ) : (\r\n              <path d=\"M12.945 1.379l-.652.763c1.577 1.462 2.57 3.544 2.57 5.858s-.994 4.396-2.57 5.858l.651.763a8.966 8.966 0 00.001-13.242zm-2.272 2.66l-.651.763a4.484 4.484 0 01-.001 6.397l.651.763c1.04-1 1.691-2.404 1.691-3.961s-.65-2.962-1.69-3.962zM0 5v6h2.804L8 14V2L2.804 5H0zm7-1.268v8.536L3.072 10H1V6h2.072L7 3.732z\"></path>\r\n            )}\r\n          </svg>\r\n        </button>\r\n        <input\r\n          type=\"range\"\r\n          title=\"\"\r\n          className=\"progressBar\"\r\n          style={{\r\n            '--seek-before-width': `${volume * 100}%`,\r\n          }}\r\n          value={muted ? 0 : volume * 100}\r\n          onChange={(e) => {\r\n            dispatch(unMute());\r\n            dispatch(setVolume(e.target.value / 100));\r\n          }}\r\n          onWheel={(e) => {\r\n            if (e.deltaY < 0) {\r\n              if (Number(e.target.value) < 90) {\r\n                dispatch(setVolume((Number(e.target.value) + 10) / 100));\r\n              } else {\r\n                dispatch(setVolume(1));\r\n              }\r\n            } else {\r\n              if (Number(e.target.value) > 10) {\r\n                dispatch(setVolume((Number(e.target.value) - 10) / 100));\r\n              } else {\r\n                dispatch(setVolume(0));\r\n              }\r\n            }\r\n          }}\r\n          min={0}\r\n          max={100}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { FormContext } from '../..';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport { message, Popover } from 'antd';\r\n\r\nimport './two.css';\r\nimport Player from './subComponents/Player';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pauseSong } from '../../../../redux/songs/songsSlice';\r\n\r\nfunction Two({ prev, next }) {\r\n  const { form, setForm } = useContext(FormContext);\r\n\r\n  //songSlice redux\r\n  const playbar = useSelector((state) => state.songs);\r\n  const dispatch = useDispatch();\r\n\r\n  // default beats\r\n  const [beats] = useState(['drums', 'guitar', 'piano']);\r\n\r\n  // tracking dynamic songs\r\n  const [songs, setSongs] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  // add icon popover\r\n  const [hidePopOver, setHidePopover] = useState(false);\r\n\r\n  // songs form popup\r\n  const [showPopup, setShowPop] = useState(false);\r\n  const [currentPopup, setCurrentPopup] = useState(0);\r\n\r\n  // React hook form\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm();\r\n\r\n  // audio status and current audio\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentAudio, setCurrentAudio] = useState(-1);\r\n\r\n  //pausing global playbar if its playing\r\n  useEffect(() => {\r\n    if (playbar.isPlaying) {\r\n      if (isPlaying) {\r\n        dispatch(pauseSong());\r\n      }\r\n    }\r\n  }, [isPlaying, dispatch, playbar.isPlaying]);\r\n\r\n  // setting default songs on start if exists\r\n  useEffect(() => {\r\n    const arr = form.songs.components.map((e, i) => {\r\n      return {\r\n        ...e,\r\n        count: i + 1,\r\n      };\r\n    });\r\n    setSongs([{ ...form.songs.master, count: 0 }, ...arr]);\r\n    setCount(form.songs.components.length + 1);\r\n  }, [form.songs]);\r\n\r\n  // scroll to bottom when adding songs\r\n  useEffect(() => {\r\n    const el = document.querySelector('.two__container');\r\n    el.scrollTop = el.scrollHeight;\r\n  }, [songs]);\r\n\r\n  const goBack = () => {\r\n    const filteredCount = songs.map((e) => {\r\n      delete e.count;\r\n      return e;\r\n    });\r\n    const master = filteredCount[0];\r\n    filteredCount.shift();\r\n\r\n    const components = filteredCount;\r\n\r\n    setForm((prev) => {\r\n      prev.songs.master = master;\r\n      prev.songs.components = components;\r\n\r\n      return prev;\r\n    });\r\n    prev();\r\n  };\r\n\r\n  const OnSubmit = () => {\r\n    const filteredCount = songs.map((e) => {\r\n      delete e.count;\r\n      return e;\r\n    });\r\n    const master = filteredCount[0];\r\n    filteredCount.shift();\r\n\r\n    const components = filteredCount.filter((e) => e.song);\r\n\r\n    if (master.song) {\r\n      if (components.length > 0) {\r\n        setForm((prev) => {\r\n          prev.songs.master = master;\r\n          prev.songs.components = components;\r\n\r\n          return prev;\r\n        });\r\n        next();\r\n      } else {\r\n        message.error('Upload atleast one Audio and one master Audio');\r\n      }\r\n    } else {\r\n      message.error('Upload atleast one Audio and one master Audio');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"two\">\r\n      <div className=\"two__container\">\r\n        <h1>{form?.type.slice(0, -1)} Stems</h1>\r\n        <div className=\"two__container__p\">\r\n          <p>Lets add your individual beat stems. ( .wav, .aiff, .mp3 )</p>\r\n          <p>\r\n            Upload a master mp3 of your complete tracks as a reference point\r\n          </p>\r\n        </div>\r\n        <p>\r\n          PRO TIP \" Be kind to our vocalists and provide a click beat leading\r\n          into your stems so that they can find the east tempo easily. \"\r\n        </p>\r\n\r\n        <div className=\"upload__songs\">\r\n          {songs.map((e, i) => {\r\n            if (!e.song) {\r\n              return (\r\n                <div\r\n                  key={e.count}\r\n                  className={\r\n                    i === 0\r\n                      ? 'upload__songs__song upload__songs__container master'\r\n                      : 'upload__songs__song upload__songs__container'\r\n                  }\r\n                >\r\n                  <div className=\"upload__songs__song__img-container\">\r\n                    <div\r\n                      className=\"upload__songs__song__img-container__img\"\r\n                      onClick={() => {\r\n                        setCurrentPopup(e.count);\r\n                        setShowPop(true);\r\n                      }}\r\n                    >\r\n                      {i === 0 ? (\r\n                        <svg\r\n                          role=\"img\"\r\n                          height=\"24\"\r\n                          width=\"24\"\r\n                          aria-hidden=\"true\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <path d=\"M9 6.159v10.899A3.485 3.485 0 006.5 16C4.57 16 3 17.57 3 19.5S4.57 23 6.5 23s3.5-1.57 3.5-3.5V6.969L21 4.63v10.178a3.485 3.485 0 00-2.5-1.058c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5V3.395L9 6.159zM6.5 22C5.122 22 4 20.878 4 19.5S5.122 17 6.5 17 9 18.122 9 19.5 7.878 22 6.5 22zm12-2.25a2.503 2.503 0 01-2.5-2.5c0-1.379 1.122-2.5 2.5-2.5s2.5 1.121 2.5 2.5c0 1.378-1.122 2.5-2.5 2.5z\"></path>\r\n                        </svg>\r\n                      ) : (\r\n                        <svg\r\n                          version=\"1.1\"\r\n                          id=\"Capa_1\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                          x=\"0px\"\r\n                          y=\"0px\"\r\n                          viewBox=\"0 0 60 60\"\r\n                          // style=\"enable-background:new 0 0 60 60;\"\r\n                          xmlSpace=\"preserve\"\r\n                        >\r\n                          <g>\r\n                            <path d=\"M60,19.787c0-3.316-2.688-6.359-7.598-8.665l6.866-6.866c0.975-0.975,0.975-2.561,0-3.535   c-0.944-0.945-2.592-0.945-3.536,0l-8.497,8.497C42.215,7.763,36.278,6.988,30,6.988c-6.278,0-12.215,0.774-17.235,2.229   L4.268,0.721c-0.944-0.945-2.592-0.945-3.536,0c-0.975,0.975-0.975,2.561,0,3.535l6.866,6.866C2.688,13.428,0,16.471,0,19.787   c0,0.053,0.008,0.105,0.009,0.157C0.008,19.96,0,19.973,0,19.988v24.564l4.349,3.669c0.092,0.082,0.2,0.16,0.296,0.242   l8.461-16.922c0.021-0.042,0.057-0.068,0.082-0.106c0.047-0.069,0.089-0.14,0.153-0.196c0.073-0.064,0.159-0.105,0.246-0.145   c0.031-0.014,0.053-0.039,0.085-0.051c0.002-0.001,0.004,0,0.005-0.001c0.089-0.03,0.184-0.035,0.279-0.039   c0.171-0.008,0.338,0.014,0.487,0.088c0.002,0.001,0.003,0.001,0.005,0.001c0.031,0.016,0.05,0.043,0.079,0.061   c0.08,0.051,0.16,0.102,0.223,0.174c0.064,0.073,0.105,0.159,0.145,0.246c0.014,0.031,0.039,0.053,0.05,0.085l0.003,0.01   c0,0.001,0.001,0.002,0.001,0.004l7.147,20.546l7.985-18.677c0.021-0.048,0.059-0.081,0.086-0.124   c0.04-0.064,0.074-0.132,0.128-0.186c0.063-0.063,0.14-0.105,0.216-0.149c0.035-0.02,0.059-0.051,0.097-0.067   c0.003-0.001,0.006-0.001,0.01-0.002c0.086-0.036,0.179-0.046,0.272-0.057c0.038-0.004,0.074-0.021,0.112-0.021   c0.031,0,0.063,0.015,0.094,0.018c0.099,0.01,0.197,0.022,0.287,0.06c0.004,0.002,0.008,0.001,0.012,0.002   c0.045,0.019,0.076,0.055,0.116,0.08c0.068,0.041,0.138,0.078,0.195,0.135c0.057,0.057,0.093,0.127,0.134,0.194   c0.025,0.041,0.061,0.072,0.081,0.117l8.021,18.762l8.042-21.402c0.016-0.044,0.049-0.074,0.071-0.113   c0.039-0.072,0.074-0.146,0.13-0.207c0.053-0.058,0.119-0.096,0.183-0.139c0.041-0.028,0.071-0.067,0.117-0.089   c0.004-0.002,0.009-0.001,0.013-0.003c0.081-0.038,0.17-0.051,0.258-0.066c0.04-0.007,0.079-0.026,0.119-0.028   c0.047-0.002,0.094,0.016,0.141,0.02c0.082,0.008,0.165,0.011,0.242,0.039c0.005,0.002,0.009,0,0.014,0.002   c0.051,0.019,0.088,0.057,0.134,0.084c0.064,0.036,0.13,0.066,0.185,0.116c0.063,0.058,0.106,0.129,0.152,0.2   c0.024,0.036,0.058,0.062,0.078,0.102l7.639,15.819L60,44.413V19.988c0-0.015-0.008-0.028-0.009-0.043   C59.993,19.892,60,19.84,60,19.787z M9.105,12.629l11.16,11.16c0.499,0.499,1.036,0.974,1.597,1.41l1.748,1.359   c0.002,0.001,0.004,0.002,0.005,0.003c0.129,0.1,0.268,0.178,0.409,0.246c0,0,0.001,0,0.001,0c0.278,0.132,0.574,0.207,0.879,0.207   c0.471,0,0.915-0.181,1.282-0.468c0.036-0.026,0.067-0.057,0.101-0.086c0.081-0.072,0.162-0.141,0.233-0.225   c0.114-0.131,0.215-0.274,0.294-0.435c0.355-0.727,0.264-1.55-0.244-2.203l-1.359-1.747c-0.433-0.558-0.907-1.095-1.41-1.598   l-9.418-9.418C18.992,9.625,24.351,8.988,30,8.988s11.007,0.637,15.617,1.848l-9.419,9.418c-0.502,0.503-0.976,1.04-1.409,1.597   l-1.36,1.748c-0.19,0.245-0.302,0.517-0.374,0.796c-0.12,0.465-0.092,0.953,0.13,1.407c0.079,0.161,0.18,0.304,0.294,0.435   c0.072,0.086,0.155,0.157,0.238,0.23c0.031,0.026,0.06,0.054,0.093,0.078c0.368,0.289,0.812,0.471,1.285,0.471   c0.463,0,0.91-0.158,1.294-0.457l1.749-1.359c0.558-0.434,1.094-0.908,1.596-1.409l11.161-11.161   C55.483,14.628,58,17.156,58,19.787c0,0.053-0.009,0.106-0.011,0.159c0,0.001-0.001,0.002-0.001,0.003   C57.756,25.881,44.938,30.893,30,30.893S2.244,25.881,2.011,19.949c0-0.001-0.001-0.002-0.001-0.003   C2.009,19.893,2,19.841,2,19.787C2,17.156,4.517,14.628,9.105,12.629z\" />\r\n                            <path d=\"M6.279,49.667c3.431,2.188,8.547,3.818,14.435,4.665l-6.879-19.777L6.279,49.667z\" />\r\n                            <path d=\"M30,56.988c-11.641,0-21.973-2.781-26.964-7.258l-3.025-2.552C0.238,54.377,13.325,59.988,30,59.988   c16.704,0,29.812-5.631,29.992-12.91l-3.333,2.918C51.543,54.313,41.334,56.988,30,56.988z\" />\r\n                            <path d=\"M49.033,33.791L41.447,53.98c5.966-1.094,10.972-3.022,13.908-5.5l0.543-0.475L49.033,33.791z\" />\r\n                            <path d=\"M38.667,54.413L31,36.481l-7.764,18.161c2.187,0.223,4.452,0.347,6.764,0.347C32.982,54.988,35.9,54.784,38.667,54.413z\" />\r\n                          </g>\r\n                        </svg>\r\n                      )}\r\n                    </div>\r\n                    {i !== 0 && (\r\n                      <div\r\n                        className=\"upload__songs__song__img-container__icon\"\r\n                        onClick={() => {\r\n                          setSongs((prev) => {\r\n                            const arr = prev.filter((k) => k.count !== e.count);\r\n                            return arr;\r\n                          });\r\n                        }}\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          width=\"24px\"\r\n                          height=\"24px\"\r\n                        >\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div\r\n                    className=\"upload__songs__song__playbar\"\r\n                    onClick={() => {\r\n                      setCurrentPopup(e.count);\r\n                      setShowPop(true);\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"24\"\r\n                      height=\"24\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      className=\"icon\"\r\n                    >\r\n                      <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"upload__songs__song__lyrics\"></div>\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div\r\n                  key={e.count}\r\n                  className={\r\n                    i === 0\r\n                      ? 'upload__songs__song master'\r\n                      : 'upload__songs__song'\r\n                  }\r\n                >\r\n                  <div className=\"upload__songs__song__img-container\">\r\n                    <div className=\"upload__songs__song__img-container__img\">\r\n                      <img\r\n                        loading=\"lazy\"\r\n                        draggable=\"false\"\r\n                        src={URL.createObjectURL(e.image)}\r\n                        alt=\"\"\r\n                        onError={(e) => {\r\n                          e.target.insertAdjacentHTML(\r\n                            'afterend',\r\n                            `<svg\r\n                            role=\"img\"\r\n                            height=\"24\"\r\n                            width=\"24\"\r\n                            aria-hidden=\"true\"\r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path d=\"M9 6.159v10.899A3.485 3.485 0 006.5 16C4.57 16 3 17.57 3 19.5S4.57 23 6.5 23s3.5-1.57 3.5-3.5V6.969L21 4.63v10.178a3.485 3.485 0 00-2.5-1.058c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5V3.395L9 6.159zM6.5 22C5.122 22 4 20.878 4 19.5S5.122 17 6.5 17 9 18.122 9 19.5 7.878 22 6.5 22zm12-2.25a2.503 2.503 0 01-2.5-2.5c0-1.379 1.122-2.5 2.5-2.5s2.5 1.121 2.5 2.5c0 1.378-1.122 2.5-2.5 2.5z\"></path>\r\n                          </svg>`\r\n                          );\r\n                          e.target.style.display = 'none';\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {i !== 0 && (\r\n                      <div\r\n                        className=\"upload__songs__song__img-container__icon\"\r\n                        onClick={() => {\r\n                          if (currentAudio === e.count) {\r\n                            setIsPlaying(false);\r\n                            setCurrentAudio(-1);\r\n                          }\r\n\r\n                          setTimeout(() => {\r\n                            setSongs((prev) => {\r\n                              const arr = prev.filter(\r\n                                (k) => k.count !== e.count\r\n                              );\r\n                              return arr;\r\n                            });\r\n                          }, 100);\r\n                        }}\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          width=\"24px\"\r\n                          height=\"24px\"\r\n                        >\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <Player\r\n                    {...{\r\n                      song: e.song,\r\n                      count: e.count,\r\n                      isPlaying,\r\n                      setIsPlaying,\r\n                      currentAudio,\r\n                      setCurrentAudio,\r\n                    }}\r\n                  />\r\n                  {/* <div\r\n                    className=\"upload__songs__song__edit\"\r\n                    onClick={() => {\r\n                      setCurrentPopup(e.count);\r\n                      setShowPop(true);\r\n                      // const\r\n                      setTimeout(() => {\r\n                        Object.keys(e).forEach((l) => {\r\n                          const input = document.querySelector(\r\n                            `.two__container__popup input[name=${l}]`\r\n                          );\r\n                          if (input) {\r\n                            console.log(input);\r\n                            // = e[l];\r\n                            if (l === 'name') {\r\n                              setValue(l, e[l]);\r\n                            } else {\r\n                              // let list = new DataTransfer();\r\n                              // if (list) {\r\n                              //   if (list.items) {\r\n                              //     list.items.add(e[l]);\r\n                              //     setValue(l, list);\r\n                              //   }\r\n                              // }\r\n                            }\r\n                          }\r\n                        });\r\n                      }, 100);\r\n\r\n                      // setValue('notRegisteredInput', e);\r\n                      // if (currentAudio === e.count) {\r\n                      //   setIsPlaying(false);\r\n                      //   setCurrentAudio(-1);\r\n                      // }\r\n                      // setTimeout(() => {\r\n                      //   setSongs((prev) => {\r\n                      //     const arr = prev.filter((k) => k.count !== e.count);\r\n                      //     return arr;\r\n                      //   });\r\n                      // }, 100);\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      fill=\"#000000\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      width=\"20px\"\r\n                      height=\"20px\"\r\n                    >\r\n                      <path d=\"M 19.171875 2 C 18.448125 2 17.724375 2.275625 17.171875 2.828125 L 16 4 L 20 8 L 21.171875 6.828125 C 22.275875 5.724125 22.275875 3.933125 21.171875 2.828125 C 20.619375 2.275625 19.895625 2 19.171875 2 z M 14.5 5.5 L 3 17 L 3 21 L 7 21 L 18.5 9.5 L 14.5 5.5 z\" />\r\n                    </svg>\r\n                  </div> */}\r\n                  <div className=\"upload__songs__song__lyrics\">\r\n                    <span>\r\n                      <p>{e.lyrics.name}</p>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"upload__songs__song__name\">\r\n                    <span>\r\n                      <p>{e.name}</p>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n\r\n          <div className=\"upload__songs__song upload__songs__container upload__songs__add\">\r\n            <Popover\r\n              placement=\"rightTop\"\r\n              visible={hidePopOver}\r\n              onVisibleChange={(e) => setHidePopover(e)}\r\n              content={\r\n                <div className=\"upload__songs__song__img-container__select\">\r\n                  {beats.map((el, i) => (\r\n                    <p\r\n                      key={i}\r\n                      onClick={() => {\r\n                        if (form.type === 'beats') {\r\n                          setSongs((prev) => [...prev, { count, name: el }]);\r\n                        } else {\r\n                          setSongs((prev) => [...prev, { count }]);\r\n                        }\r\n\r\n                        setCount((prev) => prev + 1);\r\n                        setHidePopover(false);\r\n                      }}\r\n                    >\r\n                      {el}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              }\r\n              trigger=\"click\"\r\n            >\r\n              <div className=\"upload__songs__song__img-container\">\r\n                <div className=\"upload__songs__song__img-container__img\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"upload__songs__song__img-container__icon\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </Popover>\r\n            <div className=\"upload__songs__song__playbar\"></div>\r\n            <div className=\"upload__songs__song__lyrics\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        {showPopup && (\r\n          <div className=\"two__container__popup\">\r\n            <div\r\n              className=\"two__container__popup__background\"\r\n              onClick={() => {\r\n                setCurrentPopup(0);\r\n                setShowPop(false);\r\n                reset();\r\n              }}\r\n            ></div>\r\n            <div className=\"two__container__popup__content\">\r\n              <form\r\n                onSubmit={handleSubmit(async (data) => {\r\n                  Object.keys(data).forEach((e) => {\r\n                    if (['image', 'song', 'lyrics'].includes(e)) {\r\n                      data[e] = data[e][0];\r\n                    }\r\n                  });\r\n                  setSongs((prev) => {\r\n                    const index = prev.findIndex(\r\n                      (e) => e.count === currentPopup\r\n                    );\r\n\r\n                    if (index < 0) {\r\n                      return prev;\r\n                    } else {\r\n                      prev[index] = { ...prev[index], ...data };\r\n                      return prev;\r\n                    }\r\n                  });\r\n\r\n                  setCurrentPopup(0);\r\n                  setShowPop(false);\r\n                  reset();\r\n                })}\r\n              >\r\n                <div className=\"two__container__popup__content__input-container upload__input-container\">\r\n                  <label htmlFor=\"image\">Image</label>\r\n                  <input\r\n                    {...register('image', {\r\n                      required: 'Required',\r\n                      validate: {\r\n                        type: (e) => {\r\n                          if (e[0].type === 'image/jpeg') {\r\n                            return true;\r\n                          } else {\r\n                            return 'Invalid file type';\r\n                          }\r\n                        },\r\n                        valid: async (e) => {\r\n                          const doesImageExist = (url) =>\r\n                            new Promise((resolve) => {\r\n                              const img = new Image();\r\n\r\n                              img.src = url;\r\n                              img.onload = () => resolve(true);\r\n                              img.onerror = () => resolve('Invalid file');\r\n                            });\r\n\r\n                          return await doesImageExist(\r\n                            URL.createObjectURL(e[0])\r\n                          );\r\n                        },\r\n                      },\r\n                    })}\r\n                    type=\"file\"\r\n                  />\r\n\r\n                  <p className=\"upload__input-container__error\">\r\n                    {errors.image ? errors.image.message : ''}\r\n                  </p>\r\n                </div>\r\n\r\n                {form.type === 'beats' && currentPopup === 0 ? (\r\n                  <div className=\"two__container__popup__content__input-container upload__input-container\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                      {...register('name', {\r\n                        required: 'Required',\r\n                      })}\r\n                      type=\"text\"\r\n                    />\r\n\r\n                    <p className=\"upload__input-container__error\">\r\n                      {errors.image ? errors.image.message : ''}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  form.type !== 'beats' && (\r\n                    <div className=\"two__container__popup__content__input-container upload__input-container\">\r\n                      <label>Name</label>\r\n                      <input\r\n                        {...register('name', {\r\n                          required: 'Required',\r\n                        })}\r\n                        type=\"text\"\r\n                      />\r\n\r\n                      <p className=\"upload__input-container__error\">\r\n                        {errors.image ? errors.image.message : ''}\r\n                      </p>\r\n                    </div>\r\n                  )\r\n                )}\r\n\r\n                <div className=\"two__container__popup__content__input-container upload__input-container\">\r\n                  <label>Song</label>\r\n                  <input\r\n                    {...register('song', {\r\n                      required: 'Required',\r\n                      validate: {\r\n                        type: (e) => {\r\n                          if (e[0].type === 'audio/mpeg') {\r\n                            return true;\r\n                          } else {\r\n                            return 'invalid file type';\r\n                          }\r\n                        },\r\n                        valid: async (e) => {\r\n                          const doesAudioExist = (url) =>\r\n                            new Promise((resolve) => {\r\n                              const a = new Audio();\r\n\r\n                              a.src = url;\r\n                              a.onloadeddata = () => resolve(true);\r\n                              a.onerror = () => resolve('Invalid file');\r\n                            });\r\n                          return await doesAudioExist(\r\n                            URL.createObjectURL(e[0])\r\n                          );\r\n                        },\r\n                      },\r\n                    })}\r\n                    type=\"file\"\r\n                  />\r\n\r\n                  <p className=\"upload__input-container__error\">\r\n                    {errors.song ? errors.song.message : ''}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"two__container__popup__content__input-container upload__input-container\">\r\n                  <label>Lyrics</label>\r\n                  <input\r\n                    {...register('lyrics', {\r\n                      required: 'Required',\r\n                      validate: {\r\n                        type: (e) => {\r\n                          if (e[0].name.includes('.lrc')) {\r\n                            return true;\r\n                          } else {\r\n                            return 'invalid file type';\r\n                          }\r\n                        },\r\n                        valid: async (e) => {\r\n                          const doesLrcExist = (url) =>\r\n                            new Promise((resolve) => {\r\n                              let k = new FileReader();\r\n                              k.readAsText(url);\r\n                              k.onload = () => {\r\n                                if (k.result.includes('[00:')) {\r\n                                  return resolve(true);\r\n                                } else {\r\n                                  return resolve('Invalid file');\r\n                                }\r\n                              };\r\n                            });\r\n                          return await doesLrcExist(e[0]);\r\n                        },\r\n                      },\r\n                    })}\r\n                    type=\"file\"\r\n                  />\r\n\r\n                  <p className=\"upload__input-container__error\">\r\n                    {errors.lyrics ? errors.lyrics.message : ''}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"two__container__popup__content__btns\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setCurrentPopup(0);\r\n                      setShowPop(false);\r\n                      reset();\r\n                    }}\r\n                  >\r\n                    cancel\r\n                  </button>\r\n                  <button\r\n                    className=\"two__container__popup__content__btns__add\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          className=\"upload__btns__prev\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            goBack();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n          <span>\r\n            Back <span>to \" let's create \"</span>\r\n          </span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            OnSubmit();\r\n          }}\r\n        >\r\n          <span>\r\n            Next <span>to \" Basic Info \"</span>\r\n          </span>\r\n\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Two;\r\n","import React, { useState } from 'react';\r\n\r\nfunction CustomSelect({ values, value, setValue, name }) {\r\n  const [open, setisOpen] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"upload__input-container__select-container\">\r\n        <div\r\n          className=\"upload__input-container__select-container__content\"\r\n          tabIndex=\"0\"\r\n          onBlur={() => {\r\n            setTimeout(() => {\r\n              setisOpen(false);\r\n            }, 200);\r\n          }}\r\n          onClick={() => {\r\n            setisOpen((prev) => !prev);\r\n          }}\r\n        >\r\n          <p className=\"upload__input-container__select-container__content__placeholder\">\r\n            {value ? value : 'Select Genre'}\r\n          </p>\r\n          <div className=\"icon\">\r\n            <svg\r\n              role=\"img\"\r\n              focusable=\"false\"\r\n              height=\"18\"\r\n              width=\"18\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <polyline\r\n                points=\"16 4 7 12 16 20\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n              ></polyline>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            open\r\n              ? 'upload__input-container__select-container__list-container active'\r\n              : 'upload__input-container__select-container__list-container'\r\n          }\r\n        >\r\n          <ul>\r\n            {values.map((e, i) => (\r\n              <li\r\n                key={i}\r\n                onClick={() => {\r\n                  setValue(name, e, { shouldValidate: true });\r\n                }}\r\n              >\r\n                {e}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomSelect;\r\n","import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormContext } from '../..';\r\nimport CustomSelect from '../SmallComponents/CustomSelect';\r\n\r\nimport './index.css';\r\n\r\nfunction Three({ prev, next }) {\r\n  const { form, setForm } = useContext(FormContext);\r\n\r\n  // React hook form\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    watch,\r\n    setValue,\r\n    getValues,\r\n    handleSubmit,\r\n  } = useForm({\r\n    defaultValues: {\r\n      producerName: form.producerName ? form.producerName : '',\r\n      title: form.title ? form.title : '',\r\n      genre: form.genre ? form.genre : '',\r\n      bpm: form.bpm ? form.bpm : '',\r\n      key: form.key ? form.key : '',\r\n      desc: form.desc ? form.desc : '',\r\n    },\r\n  });\r\n\r\n  const goBack = () => {\r\n    setForm((prev) => {\r\n      return {\r\n        ...prev,\r\n        ...getValues(),\r\n      };\r\n    });\r\n    prev();\r\n  };\r\n\r\n  const OnSubmit = (data) => {\r\n    setForm((prev) => {\r\n      return {\r\n        ...prev,\r\n        ...data,\r\n      };\r\n    });\r\n    next();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(OnSubmit)} className=\"three\">\r\n      <div className=\"three__container\">\r\n        <h1>Basic Info</h1>\r\n        <p>\r\n          Let's add the key information for your Beat including bpm, genre key\r\n          and contributing Producers / composers.\r\n        </p>\r\n        <div className=\"three__container__form\">\r\n          <div className=\"three__container__input-container upload__input-container\">\r\n            <label htmlFor=\"type\">Upload Type</label>\r\n            <input name=\"type\" disabled value={form.type} />\r\n            <p className=\"upload__input-container__error\"></p>\r\n          </div>\r\n          <div className=\"three__container__input-container upload__input-container\">\r\n            <label htmlFor=\"producerName\">Producer / Composers name</label>\r\n            <input\r\n              {...register('producerName', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.producerName ? errors.producerName.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"three__container__input-container upload__input-container\">\r\n            <label htmlFor=\"title\">Beat Title</label>\r\n            <input\r\n              {...register('title', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.title ? errors.title.message : ''}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"three__container__input-container upload__input-container\">\r\n            <label htmlFor=\"genre\">Genre</label>\r\n            <input\r\n              {...register('genre', {\r\n                required: 'Required',\r\n              })}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <CustomSelect\r\n              {...{\r\n                values: ['1', '2', '3', '4'],\r\n                value: watch('genre'),\r\n                name: 'genre',\r\n                setValue,\r\n              }}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.genre ? errors.genre.message : ''}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"three__container__input-container upload__input-container\">\r\n            <label htmlFor=\"bpm\">Bpm</label>\r\n            <input\r\n              {...register('bpm', {\r\n                required: 'Required',\r\n              })}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <CustomSelect\r\n              {...{\r\n                values: ['1', '2', '3', '4'],\r\n                value: watch('bpm'),\r\n                name: 'bpm',\r\n                setValue,\r\n              }}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.bpm ? errors.bpm.message : ''}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"three__container__input-container upload__input-container\">\r\n            <label htmlFor=\"key\">Key</label>\r\n            <input\r\n              {...register('key', {\r\n                required: 'Required',\r\n              })}\r\n              style={{ display: 'none' }}\r\n            />\r\n            <CustomSelect\r\n              {...{\r\n                values: ['1', '2', '3', '4'],\r\n                value: watch('key'),\r\n                name: 'key',\r\n                setValue,\r\n              }}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.key ? errors.key.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"three__container__input-container three__container__select-container upload__input-container\">\r\n            <label htmlFor=\"desc\">\r\n              Description <span>( Optional )</span>\r\n            </label>\r\n            <textarea {...register('desc')} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          className=\"upload__btns__prev\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            goBack();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n          <span>\r\n            Back{' '}\r\n            <span>\r\n              to \" {form?.type?.[0].toUpperCase()}\r\n              {form?.type.slice(1, -1)} Stems \"\r\n            </span>\r\n          </span>\r\n        </button>\r\n        <button type=\"submit\">\r\n          <span>\r\n            Next <span>to \" Meta Data \"</span>\r\n          </span>\r\n\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Three;\r\n","import React, { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormContext } from '../..';\r\n\r\nimport './index.css';\r\n\r\nfunction Four({ prev, next }) {\r\n  const { form, setForm } = useContext(FormContext);\r\n\r\n  // React hook form\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    getValues,\r\n    handleSubmit,\r\n  } = useForm({\r\n    defaultValues: {\r\n      isrcCode: form.isrcCode ? form.isrcCode : '',\r\n      artist: form.artist ? form.artist : '',\r\n      releaseTitle: form.releaseTitle ? form.releaseTitle : '',\r\n      producer: form.producer ? form.producer : '',\r\n      publisher: form.publisher ? form.publisher : '',\r\n      buyLink: form.buyLink ? form.buyLink : '',\r\n      iswcCode: form.iswcCode ? form.iswcCode : '',\r\n      releaseDate: form.releaseDate ? form.releaseDate : '',\r\n      recordLabel: form.recordLabel ? form.recordLabel : '',\r\n    },\r\n  });\r\n\r\n  const goBack = () => {\r\n    setForm((prev) => {\r\n      return {\r\n        ...prev,\r\n        ...getValues(),\r\n      };\r\n    });\r\n    prev();\r\n  };\r\n\r\n  const OnSubmit = (data) => {\r\n    setForm((prev) => {\r\n      return {\r\n        ...prev,\r\n        ...data,\r\n      };\r\n    });\r\n    next();\r\n  };\r\n\r\n  return (\r\n    <form className=\"four\" onSubmit={handleSubmit(OnSubmit)}>\r\n      <div className=\"four__container\">\r\n        <h1>Meta Data</h1>\r\n        <p>\r\n          Keep your original work protected. Ensure your correctly list the\r\n          following key information, so it is recognisable as your own original\r\n          material across our platform.\r\n        </p>\r\n        <div className=\"four__container__form\">\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"isrcCode\">Please include your ISRC Code</label>\r\n            <input\r\n              {...register('isrcCode', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.isrcCode ? errors.isrcCode.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"artist\">Artist</label>\r\n            <input\r\n              {...register('artist', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.artist ? errors.artist.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"releaseTitle\">Release Title</label>\r\n            <input\r\n              {...register('releaseTitle', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.releaseTitle ? errors.releaseTitle.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"producer\">Composer / Producers</label>\r\n            <input\r\n              {...register('producer', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.producer ? errors.producer.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"publisher\">publisher</label>\r\n            <input\r\n              {...register('publisher', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.publisher ? errors.publisher.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"buyLink\">Buy Link</label>\r\n            <input\r\n              {...register('buyLink', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.buyLink ? errors.buyLink.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__space\"></div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"iswcCode\">Please include your ISWC Code</label>\r\n            <input\r\n              {...register('iswcCode', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.iswcCode ? errors.iswcCode.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"releaseDate\">Release Date</label>\r\n            <input\r\n              {...register('releaseDate', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.releaseDate ? errors.releaseDate.message : ''}\r\n            </p>\r\n          </div>\r\n          <div className=\"four__container__input-container upload__input-container\">\r\n            <label htmlFor=\"recordLabel\">Record label</label>\r\n            <input\r\n              {...register('recordLabel', {\r\n                required: 'Required',\r\n              })}\r\n            />\r\n            <p className=\"upload__input-container__error\">\r\n              {errors.recordLabel ? errors.recordLabel.message : ''}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          className=\"upload__btns__prev\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            goBack();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n          <span>\r\n            Back <span>to \" Basic Info \"</span>\r\n          </span>\r\n        </button>\r\n        <button type=\"submit\">\r\n          <span>\r\n            Next <span>to \" Licenses \"</span>\r\n          </span>\r\n\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Four;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { FormContext } from '../..';\r\n\r\nimport './index.css';\r\nimport { message } from 'antd';\r\n\r\nfunction Five({ prev, next }) {\r\n  const { form, setForm } = useContext(FormContext);\r\n\r\n  const [abbrivations] = useState({\r\n    ccl: 'Creative Common Licenses',\r\n    rsa: 'Royal Split Agreement',\r\n    la: 'Leasing Aggrement',\r\n    others: 'custom agreement',\r\n  });\r\n  const [items, setItems] = useState({\r\n    ccl: [],\r\n    rsa: [],\r\n    la: [],\r\n    others: [],\r\n  });\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (form.licenses) {\r\n      const obj = {};\r\n      let localCount = 0;\r\n      Object.keys(form.licenses).forEach((e) => {\r\n        const arr = [];\r\n        form.licenses[e].forEach((k) => {\r\n          arr.push({ count: localCount, file: k });\r\n          localCount = localCount + 1;\r\n        });\r\n        obj[e] = arr;\r\n      });\r\n      setItems((prev) => {\r\n        return {\r\n          ...prev,\r\n          ...obj,\r\n        };\r\n      });\r\n      setCount(localCount);\r\n    }\r\n  }, [form.licenses]);\r\n\r\n  const goBack = () => {\r\n    const obj = {};\r\n    let totalLength = 0;\r\n    Object.keys(items).forEach((e) => {\r\n      const arr = [];\r\n      items[e].forEach((k) => {\r\n        arr.push(k.file);\r\n      });\r\n      obj[e] = arr;\r\n      totalLength = totalLength + arr.length;\r\n    });\r\n\r\n    setForm((prev) => {\r\n      return {\r\n        ...prev,\r\n        licenses: obj,\r\n      };\r\n    });\r\n\r\n    prev();\r\n  };\r\n\r\n  const OnSubmit = () => {\r\n    const obj = {};\r\n    let totalLength = 0;\r\n    Object.keys(items).forEach((e) => {\r\n      const arr = [];\r\n      items[e].forEach((k) => {\r\n        arr.push(k.file);\r\n      });\r\n      obj[e] = arr;\r\n      totalLength = totalLength + arr.length;\r\n    });\r\n    if (totalLength > 0) {\r\n      setForm((prev) => {\r\n        return {\r\n          ...prev,\r\n          licenses: obj,\r\n        };\r\n      });\r\n\r\n      next();\r\n    } else {\r\n      message.error('Upload atleast one license of any type');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"five\">\r\n      <div className=\"five__container\">\r\n        <h1>Licenses</h1>\r\n        <p>Add or choose one of our licensing aggrements for your upload.</p>\r\n        <div className=\"five__container__content\">\r\n          {Object.keys(items).map((e, i) => (\r\n            <div\r\n              key={i}\r\n              className={\r\n                e === 'others'\r\n                  ? 'five__container__content__container add'\r\n                  : items[e].length > 0\r\n                  ? 'five__container__content__container active'\r\n                  : 'five__container__content__container'\r\n              }\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\".txt\"\r\n                onChange={(el) => {\r\n                  const arr = [];\r\n                  Array.from(el.target.files).forEach((k, i) => {\r\n                    arr.push({ count: count + i, file: k });\r\n                  });\r\n                  setItems((prev) => {\r\n                    return {\r\n                      ...prev,\r\n                      [e]: [...prev[e], ...arr],\r\n                    };\r\n                  });\r\n                  setCount((prev) => prev + arr.length);\r\n                }}\r\n              />\r\n              <div className=\"five__container__content__container__icon\">\r\n                {e === 'others' ? (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M 11 2 L 11 11 L 2 11 L 2 13 L 11 13 L 11 22 L 13 22 L 13 13 L 22 13 L 22 11 L 13 11 L 13 2 Z\"\r\n                    ></path>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 512 512\"\r\n                    width=\"25px\"\r\n                    height=\"25px\"\r\n                  >\r\n                    <path\r\n                      fill=\"var(--spotify-faded-color)\"\r\n                      d=\"M504.1,256C504.1,119,393,7.9,256,7.9C119,7.9,7.9,119,7.9,256C7.9,393,119,504.1,256,504.1C393,504.1,504.1,393,504.1,256z\"\r\n                    />\r\n                    <path\r\n                      fill=\"#FFF\"\r\n                      d=\"M392.6,172.9c-5.8-15.1-17.7-12.7-30.6-10.1c-7.7,1.6-42,11.6-96.1,68.8c-22.5,23.7-37.3,42.6-47.1,57c-6-7.3-12.8-15.2-20-22.3C176.7,244.2,152,229,151,228.4c-10.3-6.3-23.8-3.1-30.2,7.3c-6.3,10.3-3.1,23.8,7.2,30.2c0.2,0.1,21.4,13.2,39.6,31.5c18.6,18.6,35.5,43.8,35.7,44.1c4.1,6.2,11,9.8,18.3,9.8c1.2,0,2.5-0.1,3.8-0.3c8.6-1.5,15.4-7.9,17.5-16.3c0.1-0.2,8.8-24.3,54.7-72.7c37-39.1,61.7-51.5,70.3-54.9c0.1,0,0.1,0,0.3,0c0,0,0.3-0.1,0.8-0.4c1.5-0.6,2.3-0.8,2.3-0.8c-0.4,0.1-0.6,0.1-0.6,0.1l0-0.1c4-1.7,11.4-4.9,11.5-5C393.3,196.1,397,184.1,392.6,172.9z\"\r\n                    />\r\n                  </svg>\r\n                )}\r\n              </div>\r\n              <div className=\"five__container__content__container__desc\">\r\n                <p>\r\n                  {e !== 'others'\r\n                    ? abbrivations[e]\r\n                    : 'Upload your custom agreement'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"five__container__lists\">\r\n          {Object.keys(items).map((e, i) => {\r\n            if (items[e].length > 0) {\r\n              return (\r\n                <div key={i} className=\"five__container__lists__container\">\r\n                  <p className=\"five__container__lists__container__title\">\r\n                    {abbrivations[e]}\r\n                  </p>\r\n                  <div className=\"five__container__lists__container__list\">\r\n                    {items[e].map((k, j) => (\r\n                      <div\r\n                        key={j}\r\n                        className=\"five__container__lists__container__list__container\"\r\n                      >\r\n                        <p>{k?.file?.name}</p>\r\n                        <DeleteOutlined\r\n                          onClick={() => {\r\n                            setItems((prev) => {\r\n                              return {\r\n                                ...prev,\r\n                                [e]: prev[e].filter((p) => p.count !== k.count),\r\n                              };\r\n                            });\r\n                          }}\r\n                          className=\"five__container__lists__container__list__container__icon\"\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              );\r\n            } else {\r\n              return <div key={i}></div>;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          className=\"upload__btns__prev\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            goBack();\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n          <span>\r\n            Back <span>to \" Meta Date \"</span>\r\n          </span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            OnSubmit();\r\n          }}\r\n        >\r\n          <span>\r\n            Next <span>to \" Finalising \"</span>\r\n          </span>\r\n\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Five;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FormContext } from '../..';\r\nimport { pauseSong } from '../../../../redux/songs/songsSlice';\r\nimport Player from '../Two/subComponents/Player';\r\n\r\nimport './index.css';\r\n\r\nfunction Six({ prev, next }) {\r\n  const { form } = useContext(FormContext);\r\n\r\n  //songSlice redux\r\n  const playbar = useSelector((state) => state.songs);\r\n  const dispatch = useDispatch();\r\n\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  // audio status and current audio\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentAudio, setCurrentAudio] = useState(-1);\r\n\r\n  //getting songs\r\n  useEffect(() => {\r\n    const arr = form.songs.components.map((e, i) => {\r\n      return {\r\n        ...e,\r\n        count: i + 1,\r\n      };\r\n    });\r\n    if (form.songs.master.song) {\r\n      setSongs([{ ...form.songs.master, count: 0 }, ...arr]);\r\n    } else {\r\n      setSongs([...arr]);\r\n    }\r\n  }, [form.songs]);\r\n\r\n  //pausing global playbar if its playing\r\n  useEffect(() => {\r\n    if (playbar.isPlaying) {\r\n      if (isPlaying) {\r\n        dispatch(pauseSong());\r\n      }\r\n    }\r\n  }, [isPlaying, dispatch, playbar.isPlaying]);\r\n\r\n  return (\r\n    <div className=\"six\">\r\n      <div className=\"six__container\">\r\n        <h1>Finalising</h1>\r\n        <p>\r\n          We are adding the finishing touches. Preview your upload to make sure\r\n          you're happy with the result.\r\n        </p>\r\n\r\n        <div className=\"upload__songs\">\r\n          {songs.map((e, i) => (\r\n            <div\r\n              key={e.count}\r\n              className={\r\n                i === 0 ? 'upload__songs__song master' : 'upload__songs__song'\r\n              }\r\n            >\r\n              <div className=\"upload__songs__song__img-container\">\r\n                <div className=\"upload__songs__song__img-container__img\">\r\n                  <img\r\n                    loading=\"lazy\"\r\n                    draggable=\"false\"\r\n                    src={URL.createObjectURL(e.image)}\r\n                    alt=\"\"\r\n                    onError={(e) => {\r\n                      e.target.insertAdjacentHTML(\r\n                        'afterend',\r\n                        `<svg\r\n                      role=\"img\"\r\n                      height=\"24\"\r\n                      width=\"24\"\r\n                      aria-hidden=\"true\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path d=\"M9 6.159v10.899A3.485 3.485 0 006.5 16C4.57 16 3 17.57 3 19.5S4.57 23 6.5 23s3.5-1.57 3.5-3.5V6.969L21 4.63v10.178a3.485 3.485 0 00-2.5-1.058c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5V3.395L9 6.159zM6.5 22C5.122 22 4 20.878 4 19.5S5.122 17 6.5 17 9 18.122 9 19.5 7.878 22 6.5 22zm12-2.25a2.503 2.503 0 01-2.5-2.5c0-1.379 1.122-2.5 2.5-2.5s2.5 1.121 2.5 2.5c0 1.378-1.122 2.5-2.5 2.5z\"></path>\r\n                    </svg>`\r\n                      );\r\n                      e.target.style.display = 'none';\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Player\r\n                {...{\r\n                  song: e.song,\r\n                  count: e.count,\r\n                  isPlaying,\r\n                  setIsPlaying,\r\n                  currentAudio,\r\n                  setCurrentAudio,\r\n                }}\r\n              />\r\n              <div className=\"upload__songs__song__lyrics\">\r\n                <span>\r\n                  <p>{e.lyrics.name}</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"upload__songs__song__name\">\r\n                <span>\r\n                  <p>{e.name}</p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          className=\"upload__btns__prev\"\r\n          type=\"button\"\r\n          onClick={() => prev()}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n          <span>\r\n            Back <span>to \" Licenses \"</span>\r\n          </span>\r\n        </button>\r\n        <button type=\"button\" onClick={() => next()}>\r\n          <span>\r\n            Next <span>to \" Complete \"</span>\r\n          </span>\r\n\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Six;\r\n","import { message } from 'antd';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FormContext } from '../..';\r\nimport { pauseSong } from '../../../../redux/songs/songsSlice';\r\nimport Player from '../Two/subComponents/Player';\r\n\r\nimport './index.css';\r\n\r\nfunction Seven({ prev }) {\r\n  const { form } = useContext(FormContext);\r\n\r\n  //songSlice redux\r\n  const playbar = useSelector((state) => state.songs);\r\n  const dispatch = useDispatch();\r\n\r\n  const [songs, setSongs] = useState([]);\r\n\r\n  // audio status and current audio\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentAudio, setCurrentAudio] = useState(-1);\r\n\r\n  //getting songs\r\n  useEffect(() => {\r\n    if (form.songs.master.song) {\r\n      setSongs([{ ...form.songs.master, count: 0 }]);\r\n    }\r\n  }, [form.songs]);\r\n\r\n  //pausing global playbar if its playing\r\n  useEffect(() => {\r\n    if (playbar.isPlaying) {\r\n      if (isPlaying) {\r\n        dispatch(pauseSong());\r\n      }\r\n    }\r\n  }, [isPlaying, dispatch, playbar.isPlaying]);\r\n\r\n  const OnSubmit = () => {\r\n    console.log(form);\r\n    message.success('Upload Success');\r\n  };\r\n\r\n  return (\r\n    <div className=\"seven\">\r\n      <div className=\"seven__container\">\r\n        <h1>Complete</h1>\r\n        <p>\r\n          Congratulations, your upload \" Flume - Skitz ( Studio Beat )\" is\r\n          complete. Please ensure your upload complys with our terms of use and\r\n          you do not infringe on anyone elses rights.\r\n        </p>\r\n        <div className=\"upload__songs\">\r\n          {songs.map((e, i) => (\r\n            <div\r\n              key={e.count}\r\n              className={\r\n                i === 0 ? 'upload__songs__song master' : 'upload__songs__song'\r\n              }\r\n            >\r\n              <div className=\"upload__songs__song__img-container\">\r\n                <div className=\"upload__songs__song__img-container__img\">\r\n                  <img\r\n                    loading=\"lazy\"\r\n                    draggable=\"false\"\r\n                    src={URL.createObjectURL(e.image)}\r\n                    alt=\"\"\r\n                    onError={(e) => {\r\n                      e.target.insertAdjacentHTML(\r\n                        'afterend',\r\n                        `<svg\r\n                      role=\"img\"\r\n                      height=\"24\"\r\n                      width=\"24\"\r\n                      aria-hidden=\"true\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path d=\"M9 6.159v10.899A3.485 3.485 0 006.5 16C4.57 16 3 17.57 3 19.5S4.57 23 6.5 23s3.5-1.57 3.5-3.5V6.969L21 4.63v10.178a3.485 3.485 0 00-2.5-1.058c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5V3.395L9 6.159zM6.5 22C5.122 22 4 20.878 4 19.5S5.122 17 6.5 17 9 18.122 9 19.5 7.878 22 6.5 22zm12-2.25a2.503 2.503 0 01-2.5-2.5c0-1.379 1.122-2.5 2.5-2.5s2.5 1.121 2.5 2.5c0 1.378-1.122 2.5-2.5 2.5z\"></path>\r\n                    </svg>`\r\n                      );\r\n                      e.target.style.display = 'none';\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Player\r\n                {...{\r\n                  song: e.song,\r\n                  count: e.count,\r\n                  isPlaying,\r\n                  setIsPlaying,\r\n                  currentAudio,\r\n                  setCurrentAudio,\r\n                }}\r\n              />\r\n              <div className=\"upload__songs__song__lyrics\">\r\n                <span>\r\n                  <p>{e.lyrics.name}</p>\r\n                </span>\r\n              </div>\r\n              <div className=\"upload__songs__song__name\">\r\n                <span>\r\n                  <p>{e.name}</p>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"upload__songs__values\">\r\n            <p>Bpm : {form?.bpm}</p>\r\n            <p>Key : {form?.key}</p>\r\n            <p>Genre : {form?.genre}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"upload__btns\">\r\n        <button\r\n          className=\"upload__btns__prev\"\r\n          type=\"button\"\r\n          onClick={() => prev()}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n          </svg>\r\n          <span>\r\n            Back <span>to \" Finalising \"</span>\r\n          </span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"upload__btns__upload\"\r\n          onClick={() => {\r\n            OnSubmit();\r\n          }}\r\n        >\r\n          <span>Upload</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Seven;\r\n","import { createContext, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeActiveComponent } from '../../redux/activeComponent/activeComponentSlice';\r\n\r\nimport One from './subComponent/One';\r\nimport Two from './subComponent/Two';\r\n\r\nimport './index.css';\r\nimport Three from './subComponent/Three';\r\nimport Four from './subComponent/Four';\r\nimport Five from './subComponent/Five';\r\nimport Six from './subComponent/Six';\r\nimport Seven from './subComponent/Seven';\r\n\r\nexport const FormContext = createContext();\r\n\r\nfunction Upload() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(changeActiveComponent('upload'));\r\n    document.title = `Iindi - Upload`;\r\n  }, [dispatch]);\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent((prev) => prev + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent((prev) => prev - 1);\r\n  };\r\n\r\n  const [form, setForm] = useState({\r\n    type: '',\r\n    songs: {\r\n      master: {},\r\n      components: [],\r\n    },\r\n  });\r\n\r\n  const [components] = useState([\r\n    <One {...{ next }} />,\r\n    <Two {...{ prev, next }} />,\r\n    <Three {...{ prev, next }} />,\r\n    <Four {...{ prev, next }} />,\r\n    <Five {...{ prev, next }} />,\r\n    <Six {...{ prev, next }} />,\r\n    <Seven {...{ prev }} />,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"upload\">\r\n      <div className=\"upload__content\">\r\n        <FormContext.Provider value={{ form, setForm }}>\r\n          {components[current]}\r\n        </FormContext.Provider>\r\n      </div>\r\n\r\n      {/* <button type=\"button\" onClick={() => next()}>\r\n             Next{' '}\r\n             <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M24 12l-12-9v5h-12v8h12v5l12-9z\" />\r\n            </svg>\r\n          </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n"],"sourceRoot":""}